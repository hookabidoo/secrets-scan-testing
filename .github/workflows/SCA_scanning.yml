name: SCA Scanning
on: workflow_dispatch
  #run the weekly scan on midnight Saturday
  #schedule: 
      #- cron:  '0 0 * * 6' 
  #run when changes happens to main/master branch
  #push:
    #branches:
     # - main
     # - master 

jobs:
  #require for dependabot alerts,        
  permissions: write-all 
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v2

      - name: Create temporary directory
        run: echo "WORKFLOWDIR=$(mktemp -d)" >> $GITHUB_ENV

      - name: Create environmental variables 
        run: |
          echo "SBOM_FILE=${WORKFLOWDIR}/dg_spdx_sbom.json" >> $GITHUB_ENV
          echo "SBOM_ANALYSE_FILE=${WORKFLOWDIR}/results.json" >> $GITHUB_ENV
          echo "DEPENDABOT_FILE=${WORKFLOWDIR}/dependabot_alerts.json" >> $GITHUB_ENV
          echo "TRIVY_FILE=${WORKFLOWDIR}/trivy_scan_result.json" >> $GITHUB_ENV
          echo "ARTIFACT_NAME=SCA-${GITHUB_RUN_ID}-${GITHUB_SHA}" >> $GITHUB_ENV


      - name: Get SPDX SBOM file from dependency graph if enabled 
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://api.github.com/repos/${{ github.repository }}/dependency-graph/sbom)
          if [[ $response != 200 ]]; then
            echo "Please enable Dependency graph for this repo"
          else
            # get Dependency Graph SBOM
            curl -L -o $SBOM_FILE \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/dependency-graph/sbom

            # parsing the fetched SBOM JSON file and transforming it into SPDX SBOM format so trivy can process
            cat $SBOM_FILE  | jq '.sbom' > $SBOM_ANALYSE_FILE
            sed -i -e '${/^$/d;}' $SBOM_ANALYSE_FILE
          fi
    
      - name: running trivy for SCA on github SBOM file 
        run: |
          # check if trivy is installed, if not then installed 
          if ! command -v trivy &> /dev/null; then
            echo "trivy is not installed, installing..."
            curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin  
          else
            echo "trivy is already installed"
            #check if trivy is up-to-date
            var1=$(curl -s https://api.github.com/repos/aquasecurity/trivy/releases/latest | awk '/tag_name/ {gsub(/v/,"",$2); print $2}')
            var2=$(trivy -v | awk -F ': ' '/Version:/ { print $2; exit }')
            if [ "$var1" != "$var2" ]; then
              echo "Trivy is not the latest version. Upgrading..."
              # need to check with simon team if the self-hosted runner runnign as root or not
              sudo apt-get update && sudo apt-get install -y trivy
            else
              echo "Trivy is up-to-date."
            fi
          fi

          #run trivy 
          trivy sbom $SBOM_ANALYSE_FILE --output $TRIVY_FILE

      - name: Get dependabot alert if enabled
        run: |
          # require GitHub app token or PAT 
          # query the endpoint for repository level
          curl -L -o $DEPENDABOT_FILE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          -H "X-Accepted-GitHub-Permissions: pull_requests=read,contents=read; issues=read,contents=read" \
          https://api.github.com/repos/${{ github.repository }}/dependabot/alerts

      - name: Upload Artifact
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 #v2
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: |
            ${{ env.TRIVY_FILE }}
            ${{ env.SBOM_ANALYSE_FILE }}
            ${{ env.DEPENDABOT_FILE }}



      
